// GO语言的语法小结;
package builtins

// 测试;
func Test() {
	// Hello World;
	helloWorld()

	// 自动类型推断和零初始化;
	var01()
	// 省略var的简短模式;
	var02()
	// 未使用的局部变量视为错误;
	var03()
	// 变量声明总结;
	var04()

	// 未使用的常量不会引发编译器错误;
	const01()
	// 编译器自动推断常量类型;
	const02()
	// 一行声明多个常量;
	const03()

	// 优雅的枚举自增量(从iota=0开始);
	iota01()
	// 中断iota;
	iota02()

	//  一维数组声明(单项下标赋值);
	array01()
	//  一维数组声明(声明并赋值);
	array02()
	//  一维数组声明(自动推断数组长度);
	array03()
	//  一维数组声明(声明并按下标初始化);
	array04()
	//  一维数组声明(数组赋值给数组);
	array05()
	// 一维数组声明(指针数组赋值给指针数组);
	array06()
	// 一维数组声明(遍历);
	array07()
	// 多维数组声明(遍历);
	array08()

	// 创建和初始化切片;
	slice01()
	// 空的切片(nil);
	slice02()
	// 切片的增长(赋予自身的切片);
	slice03()
	// 切片的增长(追加新的元素);
	slice04()
	// 切片的扩大容量(拷贝);
	slice05()
	// 切片的遍历;
	slice06()
	// 多维切片的增长(追加新的元素);
	slice07()

	// 取值;
	map01()
	// 赋值;
	map02()
	// 删除;
	map03()
	// 遍历;
	map04()
	// 遍历并拷贝KEY;
	map05()
	// 引用类型必须使用make函数创建;
	map06()
	// 其他补充;
	map07()

	// 按值传递;
	pointer01()
	// 指针传递;
	pointer02()
	// 两值交换;
	pointer03()
	// 通过new创建指针;
	pointer04()
	// 结构体指针;
	pointer05()
	// 指针的指针;
	pointer06()

	// 结构体初始化;
	struct01()
	// 字段标签;
	struct02()

	// 值类型与指针类型的方法;
	method01()

	// 接口的使用;
	interface01()

	// 函数的使用;
	func01()

	// 异常处理;
	panicrecover01()

	// new();
	new01()
	// make();
	make01()
}
